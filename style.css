* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    color: #ffffff;
}

html,
body {
    width: 100%;
    height: 100%;
    perspective: 800px;
}

#nav {
    height: 150px;
    width: 100%;
    display: flex;
    align-items: center;
    padding: 0 120px;
    gap: 50px;
    position: fixed;
    justify-content: flex-start;
    z-index: 999;
}

#cursor {
    height: 15px;
    width: 15px;
    background-color: #18b085;
    border-radius: 50%;
    position: fixed;
    /* z-index is given high to position it above all elements  */
    z-index: 99;
    transition: all linear 0.1s;
}

#cursor-blur {
    height: 500px;
    width: 500px;
    background-color: rgba(18, 225, 194, 0.3);
    border-radius: 50%;
    position: fixed;
    filter: blur(80px);
    /* z-index is given 9 to position it above some elements, not all, like it must be seen above video.
    Also page1 and page2 have been given a z-index = 10, so that the blur-cursor is seen there.   */
    z-index: 9;
    transition: all linear 0.4s;
}

#nav img {
    height: 120px;
    width: 160px;
    border-radius: 30%;
}

#nav h4 {
    text-transform: uppercase;
    font-weight: 500;
    cursor: pointer;
    font-size: 1.15vw;
}

video {
    height: 100%;
    width: 100%;
    object-fit: cover;
    z-index: -1;
    position: fixed;
}

#main {
    /*gives a blackish effect on the video. First 3 params are for rgb and the 4th param for transparency*/
    background-color: rgba(0, 0, 0, 0.305);
    position: relative;
}

#page1 {
    /* %age of parent properties, here parent is main.  */
    height: 100vh;
    width: 100%;
    /* background-color: red;  */
    position: relative;
    /* first convert the content into flexbox, like rows and columns. Here, we get a row with 3 columns */
    display: flex;
    align-items: center;
    justify-content: center;

    /*now change the direction so that the rows form gets converted to column form. Here, we get 3 rows and 1 column*/
    flex-direction: column;
    text-align: center;
    z-index: 10;
}

#page1 h1 {
    font-size: 130px;
    font-weight: 900;
    position: relative;
}

/*to make some shadowy effect*/
#page1 h1::before {
    content: "GOLF. FAMILY. FOOD.";
    color: rgb(0, 0, 0);

    /*content comes over h1*/
    position: absolute;
    /*position the content as needed*/
    top: -4px;
    left: -5px;
    /*giving the content border strokes*/
    -webkit-text-stroke: 2px rgba(125, 183, 44, 0.832);
    z-index: -1;

}

#page1 h2 {
    font-size: 30px;
    font-weight: 700;
    margin-top: 10px;
    margin-bottom: 20px;

}

#page1 p {
    font-weight: 25px;
    font-weight: 400;
    width: 40%;
}

#page2 {
    min-height: 100vh;
    width: 100%;
    z-index: 10;
}

#scroller {
    /* background-color: red; */
    white-space: nowrap;

    /* to avoid the text from overflowing out of the page. 
    Adding overflow property would add a scrollbar that is removed using:

    #scroller::-webkit-scrollbar {
    display: none;} 
    */
    overflow-x: auto;
    overflow-y: hidden;
    position: relative;
    z-index: 10;
}

/*to remove the scrollbar*/
#scroller::-webkit-scrollbar {
    display: none;
}

#scroller-in {
    /* all the text becomes wrapped.  */
    display: inline-block;
    white-space: nowrap;

    /* name has to be the identifier used in @keyframes identifier.  */
    animation-name: scroll;

    animation-duration: 40s;

    /* keep the animation linear and continuous.  */
    animation-timing-function: linear;

    /*number of times the animation repeats. */
    animation-iteration-count: infinite;
}

#scroller h4 {
    display: inline-block;
    font-size: 90px;
    font-weight: 1500;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;

    /* to add some space between each h4 tag.  */
    margin-right: 20px;
    transition: all linear 0.3s;

    /* text has no color.  */
    color: transparent;

    /* to add the outline strokes over the text.  */
    -webkit-text-stroke: 2px #ffffff;
}

/*what happens when we hover over the texts in the scroller. */
#scroller h4:hover {
    color: #18b085;
    -webkit-text-stroke: 2px #9fc00d;
}

/* CSS amination which is named(identifier) as scroll. This animation has to be applied to some element.
   Here, we are applying this scroll property to scroller-in div. 

   The `@keyframes` rule in CSS is used to define a set of styles that will be gradually applied to an element 
   over a specified animation duration. 
   
   In the provided example, the `@keyframes` rule is named "scroll," 
   and it creates a simple horizontal scroll animation using the `transform` property.

   Let's break down the `@keyframes` rule:
   1. `@keyframes scroll`: This line starts the definition of a new keyframe animation called "scroll." 
   You can give it any name you like, and it will be used as a reference in the 
   CSS later when applying the animation to an element.
   
   2. `from`: The `from` keyword refers to the starting point of the animation. 
   In this case, it specifies the initial state of the element before any animation is applied.
   
   3. `transform: translateX(0);`: 
   Inside the `from` block, the `transform` property is set to `translateX(0)`. 
   The `translateX()` function of the `transform` property is used to move the element horizontally along the X-axis. 
   In this case, `translateX(0)` means that the element will have no horizontal translation, 
   starting from its original position.
   
   4. `to`: The `to` keyword refers to the ending point of the animation. 
   It defines how the element should look after the animation is complete.
   
   5. `transform: translateX(-100%);`: Inside the `to` block, the `transform` property is set to `translateX(-100%)`. 
   This means that the element will be translated horizontally along the X-axis to the left by 100% of its own width. 
   Essentially, the element will move all the way to the left and be fully hidden at the end of the animation.
   
   When you apply this keyframe animation to an element using CSS, 
   it will smoothly animate the horizontal scroll effect, 
   moving the element from its initial position (at `translateX(0)`) to a new position (at `translateX(-100%)`) 
   over a specified duration.
*/

@keyframes scroll {
    from {
        transform: translateX(0);
    }

    to {
        transform: translateX(-100%);
    }
}

#about-us {
    height: 40vh;
    width: 100%;
    /* background-color: red; */
    display: flex;
    padding: 0 50px;
    align-items: center;
    justify-content: space-around;

    /* images should be above the blur scroller.  */
    z-index: 10;
    position: relative;
}

#about-us img {
    height: 320px;
    width: 520px;
    border-radius: 20px;
    object-fit: cover;
}

#about-us-in {
    width: 50%;
    text-align: center;
}

#about-us-in h3 {
    font-size: 54px;
    font-weight: 800;
    margin-bottom: 30px;
}

#about-us-in p {
    font-size: 20px;
    line-height: 26px;
}

#cards-container {
    /* background-color: red; */
    height: 60vh;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 170px;
    position: relative;
    z-index: 10;
}

.card {
    height: 60%;
    width: 24%;
    /* background-color: blue; */
    border-radius: 10px;
    background-size: cover;
    background-position: center;
    overflow: hidden;
    transition: all ease 0.6s;
}

#card1 {
    background-image: url(./assets/KGCcars.JPG);
}

#card2 {
    background-image: url(./assets/KGCadventuregolf.jpg);
}

#card3 {
    background-image: url(./assets/KGClessons.jpg);
}

.overlay {
    height: 100%;
    width: 100%;
    background-color: #95c11e;
    padding: 30px;
    padding-top: 160px;

    /* so that it is not shown without being hovered on.  */
    opacity: 0;

    /* for smooth change.  */
    transition: all ease 0.6s;
}

.overlay h4 {
    color: #000;
    font-size: 40px;
    text-transform: uppercase;
    white-space: nowrap;
    margin-bottom: 20px;
    font-weight: 800;
    text-align: center;
}

.overlay p {
    color: #000;
    font-size: 18px;
}

.card:hover .overlay {
    opacity: 1;
}

.card:hover{
    transform: rotate3d(1,1,0,20deg);
}